@page "/users/register"
@inject IClient HttpClient
@inject NavigationManager NavigationManager


<h3>Register</h3>
@if (String.IsNullOrEmpty(message) == false)
{
  <div class = "alert alert-danger">
    <p>@message</p>
  </div>
}
<div class = "card-body">
  <EditForm Model = "RegistrationModel" OnInvalidSubmit = "HandleRegistration">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class = "form-group">
      <label for = "email">Email</label>
      <InputText class = "form-control" @bind-Value = "RegistrationModel.Email" placeholder = "Email"/>
      <ValidationMessage For = "@(() => RegistrationModel.Email)"/>
    </div>
    <div class = "form-group">
      <label for = "firstName">First Name</label>
      <InputText class = "form-control" @bind-Value = "RegistrationModel.FirstName" placeholder = "First Name"/>
      <ValidationMessage For = "@(() => RegistrationModel.FirstName)"/>
    </div>
    <div class = "form-group">
      <label for = "lastName">Last Name</label>
      <InputText class = "form-control" @bind-Value = "RegistrationModel.LastName" placeholder = "Last Name"/>
      <ValidationMessage For = "@(() => RegistrationModel.LastName)"/>
    </div>
    <div class = "form-group">
      <label for = "password">Password</label>
      <InputText type = "password" class = "form-control" @bind-Value = "RegistrationModel.Password" placeholder = "Password"/>
      <ValidationMessage For = "@(() => RegistrationModel.Password)"/>
    </div>
    <button type = "submit" class = "btn btn-primary">Register</button>
  </EditForm>
</div>

@code {
  UserDto RegistrationModel = new UserDto
  {
    Role = "User"
  };
  string message = String.Empty;
  private async Task HandleRegistration()
  {
    
    try
    {
      await HttpClient.RegisterAsync(RegistrationModel);
      NavigateToLogin();
    }
    catch (ApiException ex)
    {
      if (ex.StatusCode >= 200 && ex.StatusCode < 300)
      {
        NavigateToLogin();
      }
      message = ex.Response;
    }

    
  }

  private void NavigateToLogin()
  {
    NavigationManager.NavigateTo("/users/login");
  }
}
